{"ast":null,"code":"var _jsxFileName = \"/home/jeff/my-app/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CounterButton extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 1\n    };\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (this.props.color !== nextProps.color) {\n      return true;\n    }\n\n    if (this.state.count !== nextState.count) {\n      return true;\n    }\n\n    return false;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      color: this.props.color,\n      onClick: () => this.setState(state => ({\n        count: state.count + 1\n      })),\n      children: [\"Count: \", this.state.count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction Square(props) {\n  if (props.highlights.includes(props.index)) {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"square green\",\n      onClick: props.onClick,\n      children: props.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"square\",\n      onClick: props.onClick,\n      children: props.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_c = Square;\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    return /*#__PURE__*/_jsxDEV(Square, {\n      index: i,\n      value: this.props.squares[i],\n      onClick: () => this.props.onClick(i),\n      highlights: this.props.highlights\n    }, \"square\" + i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }, this);\n  }\n\n  render() {\n    const loopTest = () => {\n      let content = [];\n\n      for (let i = 0; i < 3; i++) {\n        content.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"board-row\"\n        }, \"board\" + i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 22\n        }, this));\n\n        for (let j = 0; j < 3; j++) {\n          content.push(this.renderSquare(3 * i + j));\n        }\n      }\n\n      return content;\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"counterbutton\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(CounterButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 41\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), loopTest()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null)\n      }],\n      prevPos: [],\n      stepNumber: 0,\n      xIsNext: true\n    };\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const prevPos = this.state.prevPos.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n\n    squares[i] = this.state.xIsNext ? \"X\" : 'O';\n    this.setState({\n      history: history.concat([{\n        squares: squares\n      }]),\n      prevPos: prevPos.concat([i]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: step % 2 === 0\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n    const moves = history.map((step, move) => {\n      let index = this.state.prevPos[move - 1];\n      const desc = move ? `Go to move ${move} (${index % 3 + 1}, ${Math.floor(index / 3) + 1})` : 'Go to game start';\n\n      if (move === this.state.stepNumber) {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => this.jumpTo(move),\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: desc\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 55\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this)\n        }, move, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => this.jumpTo(move),\n            children: desc\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this)\n        }, move, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this);\n      }\n    });\n    let status;\n    let highlights = [];\n\n    if (winner) {\n      if (winner.length === 1) {\n        status = \"Tie!\";\n      } else {\n        status = `Winner:${winner[0]}!`;\n\n        for (let i = 0; i < 3; i++) {\n          highlights.push(winner[1][i]);\n        }\n      }\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? \"X\" : \"O\");\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        children: /*#__PURE__*/_jsxDEV(Board, {\n          squares: current.squares,\n          onClick: i => this.handleClick(i),\n          highlights: highlights\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: moves\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return [squares[a], [a, b, c]];\n    }\n  }\n\n  if (isATie(squares)) {\n    return [\"tie\"];\n  }\n\n  return null;\n}\n\nfunction isATie(squares) {\n  for (let i = 0; i < squares.length; i++) {\n    if (!squares[i]) {\n      return false;\n    }\n  }\n\n  return true;\n} // ========================================\n\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Game, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 210,\n  columnNumber: 3\n}, this), document.getElementById('root'));\n\nvar _c;\n\n$RefreshReg$(_c, \"Square\");","map":{"version":3,"sources":["/home/jeff/my-app/src/index.js"],"names":["React","ReactDOM","CounterButton","Component","constructor","props","state","count","shouldComponentUpdate","nextProps","nextState","color","render","setState","Square","highlights","includes","index","onClick","value","Board","renderSquare","i","squares","loopTest","content","push","j","Game","history","Array","fill","prevPos","stepNumber","xIsNext","handleClick","slice","current","length","calculateWinner","concat","jumpTo","step","winner","moves","map","move","desc","Math","floor","status","lines","a","b","c","isATie","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;;;AAEA,MAAMC,aAAN,SAA4BF,KAAK,CAACG,SAAlC,CAA4C;AAC1CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,KAAK,EAAE;AAAR,KAAb;AACD;;AAEDC,EAAAA,qBAAqB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AAC1C,QAAI,KAAKL,KAAL,CAAWM,KAAX,KAAqBF,SAAS,CAACE,KAAnC,EAA0C;AACxC,aAAO,IAAP;AACD;;AACD,QAAI,KAAKL,KAAL,CAAWC,KAAX,KAAqBG,SAAS,CAACH,KAAnC,EAA0C;AACxC,aAAO,IAAP;AACD;;AACD,WAAO,KAAP;AACD;;AAEDK,EAAAA,MAAM,GAAG;AACP,wBACE;AACE,MAAA,KAAK,EAAE,KAAKP,KAAL,CAAWM,KADpB;AAEE,MAAA,OAAO,EAAE,MAAM,KAAKE,QAAL,CAAcP,KAAK,KAAK;AAACC,QAAAA,KAAK,EAAED,KAAK,CAACC,KAAN,GAAc;AAAtB,OAAL,CAAnB,CAFjB;AAAA,4BAGU,KAAKD,KAAL,CAAWC,KAHrB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AAxByC;;AA2B5C,SAASO,MAAT,CAAgBT,KAAhB,EAAuB;AACrB,MAAIA,KAAK,CAACU,UAAN,CAAiBC,QAAjB,CAA0BX,KAAK,CAACY,KAAhC,CAAJ,EAA4C;AAC1C,wBACE;AAAQ,MAAA,SAAS,EAAC,cAAlB;AAAiC,MAAA,OAAO,EAAEZ,KAAK,CAACa,OAAhD;AAAA,gBACGb,KAAK,CAACc;AADT;AAAA;AAAA;AAAA;AAAA,YADF;AAKD,GAND,MAOK;AACH,wBACE;AAAQ,MAAA,SAAS,EAAC,QAAlB;AAA2B,MAAA,OAAO,EAAEd,KAAK,CAACa,OAA1C;AAAA,gBACGb,KAAK,CAACc;AADT;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;AACF;;KAfQL,M;;AAkBT,MAAMM,KAAN,SAAoBpB,KAAK,CAACG,SAA1B,CAAoC;AAClCkB,EAAAA,YAAY,CAACC,CAAD,EAAI;AACd,wBACA,QAAC,MAAD;AACE,MAAA,KAAK,EAAIA,CADX;AAEE,MAAA,KAAK,EAAI,KAAKjB,KAAL,CAAWkB,OAAX,CAAmBD,CAAnB,CAFX;AAGE,MAAA,OAAO,EAAK,MAAM,KAAKjB,KAAL,CAAWa,OAAX,CAAmBI,CAAnB,CAHpB;AAIE,MAAA,UAAU,EAAK,KAAKjB,KAAL,CAAWU;AAJ5B,OAAa,WAASO,CAAtB;AAAA;AAAA;AAAA;AAAA,YADA;AAOD;;AAEDV,EAAAA,MAAM,GAAG;AACP,UAAMY,QAAQ,GAAG,MAAM;AACrB,UAAIC,OAAO,GAAG,EAAd;;AACA,WAAK,IAAIH,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1BG,QAAAA,OAAO,CAACC,IAAR,eAAa;AAAqB,UAAA,SAAS,EAAC;AAA/B,WAAU,UAAQJ,CAAlB;AAAA;AAAA;AAAA;AAAA,gBAAb;;AACA,aAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1BF,UAAAA,OAAO,CAACC,IAAR,CAAa,KAAKL,YAAL,CAAkB,IAAEC,CAAF,GAAIK,CAAtB,CAAb;AACD;AACF;;AACD,aAAOF,OAAP;AACD,KATD;;AAWA,wBACE;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,qCAAgC,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,gBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEGD,QAAQ,EAFX;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AA7BiC;;AAgCpC,MAAMI,IAAN,SAAmB5B,KAAK,CAACG,SAAzB,CAAmC;AACjCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXuB,MAAAA,OAAO,EAAE,CAAC;AACRN,QAAAA,OAAO,EAAEO,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,IAAd;AADD,OAAD,CADE;AAIXC,MAAAA,OAAO,EAAE,EAJE;AAKXC,MAAAA,UAAU,EAAE,CALD;AAMXC,MAAAA,OAAO,EAAE;AANE,KAAb;AAQD;;AAEDC,EAAAA,WAAW,CAACb,CAAD,EAAI;AACb,UAAMO,OAAO,GAAG,KAAKvB,KAAL,CAAWuB,OAAX,CAAmBO,KAAnB,CAAyB,CAAzB,EAA4B,KAAK9B,KAAL,CAAW2B,UAAX,GAAwB,CAApD,CAAhB;AACA,UAAMD,OAAO,GAAG,KAAK1B,KAAL,CAAW0B,OAAX,CAAmBI,KAAnB,CAAyB,CAAzB,EAA4B,KAAK9B,KAAL,CAAW2B,UAAX,GAAwB,CAApD,CAAhB;AACA,UAAMI,OAAO,GAAGR,OAAO,CAACA,OAAO,CAACS,MAAR,GAAiB,CAAlB,CAAvB;AACA,UAAMf,OAAO,GAAGc,OAAO,CAACd,OAAR,CAAgBa,KAAhB,EAAhB;;AACA,QAAIG,eAAe,CAAChB,OAAD,CAAf,IAA4BA,OAAO,CAACD,CAAD,CAAvC,EAA4C;AAC1C;AACD;;AACDC,IAAAA,OAAO,CAACD,CAAD,CAAP,GAAa,KAAKhB,KAAL,CAAW4B,OAAX,GAAqB,GAArB,GAA2B,GAAxC;AACA,SAAKrB,QAAL,CAAc;AACZgB,MAAAA,OAAO,EAAEA,OAAO,CAACW,MAAR,CAAe,CAAC;AACvBjB,QAAAA,OAAO,EAAEA;AADc,OAAD,CAAf,CADG;AAIZS,MAAAA,OAAO,EAAEA,OAAO,CAACQ,MAAR,CAAe,CAAClB,CAAD,CAAf,CAJG;AAKZW,MAAAA,UAAU,EAAEJ,OAAO,CAACS,MALR;AAMZJ,MAAAA,OAAO,EAAE,CAAC,KAAK5B,KAAL,CAAW4B;AANT,KAAd;AAQD;;AAEDO,EAAAA,MAAM,CAACC,IAAD,EAAO;AACX,SAAK7B,QAAL,CAAc;AACZoB,MAAAA,UAAU,EAAES,IADA;AAEZR,MAAAA,OAAO,EAAGQ,IAAI,GAAG,CAAR,KAAe;AAFZ,KAAd;AAID;;AAED9B,EAAAA,MAAM,GAAG;AACP,UAAMiB,OAAO,GAAG,KAAKvB,KAAL,CAAWuB,OAA3B;AACA,UAAMQ,OAAO,GAAGR,OAAO,CAAC,KAAKvB,KAAL,CAAW2B,UAAZ,CAAvB;AACA,UAAMU,MAAM,GAAGJ,eAAe,CAACF,OAAO,CAACd,OAAT,CAA9B;AACA,UAAMqB,KAAK,GAAGf,OAAO,CAACgB,GAAR,CAAY,CAACH,IAAD,EAAOI,IAAP,KAAgB;AACxC,UAAI7B,KAAK,GAAG,KAAKX,KAAL,CAAW0B,OAAX,CAAmBc,IAAI,GAAC,CAAxB,CAAZ;AACA,YAAMC,IAAI,GAAGD,IAAI,GACd,cAAaA,IAAK,KAAI7B,KAAK,GAAC,CAAN,GAAQ,CAAE,KAAI+B,IAAI,CAACC,KAAL,CAAWhC,KAAK,GAAC,CAAjB,IAAoB,CAAE,GAD5C,GAGf,kBAHF;;AAIA,UAAI6B,IAAI,KAAK,KAAKxC,KAAL,CAAW2B,UAAxB,EAAoC;AAClC,4BACE;AAAA,iCACE;AAAQ,YAAA,OAAO,EAAE,MAAM,KAAKQ,MAAL,CAAYK,IAAZ,CAAvB;AAAA,mCAA0C;AAAA,wBAAIC;AAAJ;AAAA;AAAA;AAAA;AAAA;AAA1C;AAAA;AAAA;AAAA;AAAA;AADF,WAASD,IAAT;AAAA;AAAA;AAAA;AAAA,gBADF;AAKD,OAND,MAOK;AACH,4BACE;AAAA,iCACE;AAAQ,YAAA,OAAO,EAAE,MAAM,KAAKL,MAAL,CAAYK,IAAZ,CAAvB;AAAA,sBAA2CC;AAA3C;AAAA;AAAA;AAAA;AAAA;AADF,WAASD,IAAT;AAAA;AAAA;AAAA;AAAA,gBADF;AAKD;AACF,KApBa,CAAd;AAqBA,QAAII,MAAJ;AACA,QAAInC,UAAU,GAAG,EAAjB;;AACA,QAAI4B,MAAJ,EAAY;AACV,UAAIA,MAAM,CAACL,MAAP,KAAkB,CAAtB,EAAyB;AAAEY,QAAAA,MAAM,GAAG,MAAT;AAAiB,OAA5C,MACK;AACHA,QAAAA,MAAM,GAAI,UAASP,MAAM,CAAC,CAAD,CAAI,GAA7B;;AACA,aAAK,IAAIrB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1BP,UAAAA,UAAU,CAACW,IAAX,CAAgBiB,MAAM,CAAC,CAAD,CAAN,CAAUrB,CAAV,CAAhB;AACD;AACF;AACF,KARD,MAQO;AACL4B,MAAAA,MAAM,GAAG,mBAAmB,KAAK5C,KAAL,CAAW4B,OAAX,GAAqB,GAArB,GAA2B,GAA9C,CAAT;AACD;;AACD,wBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,+BACE,QAAC,KAAD;AACE,UAAA,OAAO,EAAEG,OAAO,CAACd,OADnB;AAEE,UAAA,OAAO,EAAGD,CAAD,IAAO,KAAKa,WAAL,CAAiBb,CAAjB,CAFlB;AAGE,UAAA,UAAU,EAAEP;AAHd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE;AAAA,oBAAMmC;AAAN;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAKN;AAAL;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAeD;;AA5FgC;;AA+FnC,SAASL,eAAT,CAAyBhB,OAAzB,EAAkC;AAChC,QAAM4B,KAAK,GAAG,CACZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CADY,EAEZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAFY,EAGZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAHY,EAIZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAJY,EAKZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CALY,EAMZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CANY,EAOZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAPY,EAQZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CARY,CAAd;;AAUA,OAAK,IAAI7B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG6B,KAAK,CAACb,MAA1B,EAAkChB,CAAC,EAAnC,EAAuC;AACrC,UAAM,CAAC8B,CAAD,EAAIC,CAAJ,EAAOC,CAAP,IAAYH,KAAK,CAAC7B,CAAD,CAAvB;;AACA,QAAIC,OAAO,CAAC6B,CAAD,CAAP,IAAc7B,OAAO,CAAC6B,CAAD,CAAP,KAAe7B,OAAO,CAAC8B,CAAD,CAApC,IAA2C9B,OAAO,CAAC6B,CAAD,CAAP,KAAe7B,OAAO,CAAC+B,CAAD,CAArE,EAA0E;AACxE,aAAO,CAAC/B,OAAO,CAAC6B,CAAD,CAAR,EAAa,CAACA,CAAD,EAAGC,CAAH,EAAKC,CAAL,CAAb,CAAP;AACD;AACF;;AACD,MAAIC,MAAM,CAAChC,OAAD,CAAV,EAAqB;AAAE,WAAO,CAAC,KAAD,CAAP;AAAiB;;AACxC,SAAO,IAAP;AACD;;AAEC,SAASgC,MAAT,CAAgBhC,OAAhB,EAAyB;AACvB,OAAK,IAAID,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,OAAO,CAACe,MAA5B,EAAoChB,CAAC,EAArC,EAAyC;AACvC,QAAI,CAACC,OAAO,CAACD,CAAD,CAAZ,EAAiB;AACf,aAAO,KAAP;AACD;AACF;;AACD,SAAO,IAAP;AACD,C,CAEH;;;AAEArB,QAAQ,CAACW,MAAT,eACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,QADF,EAEE4C,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFF","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nclass CounterButton extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {count: 1};\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (this.props.color !== nextProps.color) {\n      return true;\n    }\n    if (this.state.count !== nextState.count) {\n      return true;\n    }\n    return false;\n  }\n\n  render() {\n    return (\n      <button\n        color={this.props.color}\n        onClick={() => this.setState(state => ({count: state.count + 1}))}>\n        Count: {this.state.count}\n      </button>\n    );\n  }\n}\n\nfunction Square(props) {\n  if (props.highlights.includes(props.index)) {\n    return (\n      <button className=\"square green\" onClick={props.onClick}>\n        {props.value}\n      </button>\n    );\n  }\n  else {\n    return (\n      <button className=\"square\" onClick={props.onClick}>\n        {props.value}\n      </button>\n    );\n  }\n}\n\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    return (\n    <Square key={\"square\"+i}\n      index = {i}\n      value = {this.props.squares[i]} \n      onClick = { () => this.props.onClick(i) }\n      highlights = { this.props.highlights }\n    /> );\n  }\n\n  render() {\n    const loopTest = () => { \n      let content = [];\n      for (let i = 0; i < 3; i++) { \n        content.push(<div key={\"board\"+i} className=\"board-row\"></div>)\n        for (let j = 0; j < 3; j++) {\n          content.push(this.renderSquare(3*i+j));\n        }\n      }\n      return content;\n    }\n\n    return (\n      <div>\n        <div className=\"counterbutton\"> <CounterButton /> </div>\n        {loopTest()}\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null),\n      }],\n      prevPos: [],\n      stepNumber: 0,\n      xIsNext: true,\n    };\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const prevPos = this.state.prevPos.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    squares[i] = this.state.xIsNext ? \"X\" : 'O';\n    this.setState({\n      history: history.concat([{\n        squares: squares\n      }]),\n      prevPos: prevPos.concat([i]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext,\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: (step % 2) === 0,\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n    const moves = history.map((step, move) => {\n      let index = this.state.prevPos[move-1];\n      const desc = move ?\n        `Go to move ${move} (${index%3+1}, ${Math.floor(index/3)+1})`\n        :\n        'Go to game start';\n      if (move === this.state.stepNumber) {\n        return (\n          <li key={move}>\n            <button onClick={() => this.jumpTo(move)}><b>{desc}</b></button>\n          </li>\n        );\n      }\n      else { \n        return (\n          <li key={move}>\n            <button onClick={() => this.jumpTo(move)}>{desc}</button>\n          </li>\n        );\n      }\n    });\n    let status;\n    let highlights = [];\n    if (winner) {\n      if (winner.length === 1) { status = \"Tie!\" }\n      else { \n        status = `Winner:${winner[0]}!`; \n        for (let i = 0; i < 3; i++) { \n          highlights.push(winner[1][i]);\n        }\n      }\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? \"X\" : \"O\");\n    }\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board\n            squares={current.squares}\n            onClick={(i) => this.handleClick(i)}\n            highlights={highlights}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <ol>{moves}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return [squares[a], [a,b,c]];\n    }\n  }\n  if (isATie(squares)) { return [\"tie\"]; }\n  return null;\n}\n\n  function isATie(squares) { \n    for (let i = 0; i < squares.length; i++) { \n      if (!squares[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n"]},"metadata":{},"sourceType":"module"}